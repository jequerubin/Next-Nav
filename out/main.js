"use strict";var F=Object.create;var u=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var W=(t,i)=>{for(var r in i)u(t,r,{get:i[r],enumerable:!0})},x=(t,i,r,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of S(i))!T.call(t,n)&&n!==r&&u(t,n,{get:()=>i[n],enumerable:!(a=C(i,n))||a.enumerable});return t};var w=(t,i,r)=>(r=t!=null?F(I(t)):{},x(i||!t||!t.__esModule?u(r,"default",{value:t,enumerable:!0}):r,t)),R=t=>x(u({},"__esModule",{value:!0}),t);var $={};W($,{activate:()=>V,deactivate:()=>_});module.exports=R($);var o=w(require("vscode")),M=w(require("path"));var P=w(require("fs/promises")),E=require("readline"),k=require("fs"),h=w(require("path"));async function j(t){let i=(0,E.createInterface)({input:(0,k.createReadStream)(t,{end:9999})}),r="",a=!1;for await(let s of i){if(a){s.includes("*/")&&(a=!1);continue}let c=s.indexOf("/*");if(c!==-1){a=!0;let e=s.indexOf("*/");if(e!==-1&&e>c){a=!1;let d=s.slice(0,c)+s.slice(e+2);if(d.trim()){r=d.trim();break}continue}continue}let m=s.split("//")[0].trim();if(m){r=m;break}}return i.close(),['"use client"',"'use client'","`use client`"].some(s=>r.includes(s))}async function g(t){let i=1,r=/\.(js|jsx|css|ts|tsx|sass|scss)$/,a=[{id:0,folderName:h.basename(t),parentNode:null,path:t,contents:[],render:"server"}];async function n(s,c){let m=await P.readdir(s,{withFileTypes:!0});for(let e of m){let d=h.join(s,e.name);if(e.isDirectory()){let y={id:i++,folderName:e.name,parentNode:c,path:d,contents:[],render:"server"};a.push(y),await n(d,y.id)}else r.test(e.name)&&(a[c].contents.push(e.name),await j(d)&&(a[c].render="client"))}}try{return await n(t,0),a}catch{return{}}}var f=require("fs");var D=w(require("fs/promises")),p=w(require("path")),b=w(require("vscode"));async function N(t){try{if(!b.workspace.workspaceFolders)return"";let i=b.workspace.workspaceFolders[0].uri.fsPath,r=p.isAbsolute(t)?t:p.join(i,t);return!r.startsWith(i)||!(await D.stat(r)).isDirectory()?"":r}catch{return""}}var v=null,l=null;async function O(t,i){try{let r=await g(i),a=JSON.stringify(r);t.webview.postMessage({command:"sendString",data:a})}catch(r){o.window.showErrorMessage("Error sending updated directory: "+r.message)}}function V(t){let i="next-nav-icon";t.globalState.update(i,!0);let r=o.window.createStatusBarItem(o.StatusBarAlignment.Right);r.text="Next.Nav",r.command="next-extension.next-nav",r.tooltip="Launch Next Nav",r.show(),t.subscriptions.push(r);let a=o.commands.registerCommand("next-extension.next-nav",async()=>{if(l)l.reveal(o.ViewColumn.One);else{if(l=o.window.createWebviewPanel("Next.Nav","Next.Nav",o.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0}),l.onDidDispose(()=>{l=null},null,t.subscriptions),l===null)throw new Error("Webview is null");let n=l;n.webview.onDidReceiveMessage(async s=>{switch(console.log("Received message:",s),s.command){case"submitDir":let c=await N(s.folderName);c?(v=c,o.window.showInformationMessage("Directory is now "+v),n.webview.postMessage({command:"submitDirResponse",result:!0})):(s.showError&&o.window.showErrorMessage("Invalid directory: "+s.folderName),n.webview.postMessage({command:"submitDirResponse",result:!1}));break;case"getRequest":v?await O(n,v):(console.error("No directory has been submitted yet."),o.window.showErrorMessage("No directory has been submitted yet."));break;case"open_file":let m=s.filePath;try{let e=await o.workspace.openTextDocument(m);await o.window.showTextDocument(e),console.log(`Switched to tab with file: ${m}`)}catch(e){o.window.showErrorMessage(`Error opening file: ${e.message}`),console.error(`Error opening file: ${e}`)}break;case"addFile":try{let e=s.filePath;await f.promises.writeFile(e,""),n.webview.postMessage({command:"added_addFile"})}catch(e){console.error("Error creating file:",e.message),o.window.showErrorMessage("Error creating file: "+e.message)}break;case"addFolder":try{let e=s.filePath;await f.promises.mkdir(e),n.webview.postMessage({command:"added_addFolder"})}catch(e){console.error("Error creating folder:",e.message),o.window.showErrorMessage("Error creating folder: "+e.message)}break;case"deleteFile":try{let e=s.filePath,d=o.Uri.file(e);if(await f.promises.stat(e))await o.workspace.fs.delete(d,{useTrash:!0});else throw new Error("File does not exist");n.webview.postMessage({command:"added_deleteFile"})}catch(e){console.error("Error deleting file:",e.message),o.window.showErrorMessage("Error deleting file: "+e.message)}break;case"deleteFolder":try{let e=s.filePath,d=o.Uri.file(e);if(await f.promises.stat(e))await o.workspace.fs.delete(d,{recursive:!0,useTrash:!0});else throw new Error("Folder does not exist");n.webview.postMessage({command:"added_deleteFolder"})}catch(e){o.window.showErrorMessage("Error deleting folder: "+e.message)}break}},void 0,t.subscriptions);try{let s=M.join(t.extensionPath,"webview-react-app","dist","bundle.js"),c=await f.promises.readFile(s,"utf-8");l.webview.html=`
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>Next.Nav</title>
          <link rel="icon" type="image/x-icon" href="">
        </head>
        <body>
          <div id="root"></div>
          <script>
          ${c}
          </script>
        </body>
        </html>`}catch{}o.window.showInformationMessage("Welcome to Next.Nav!")}});t.subscriptions.push(a)}function _(){}0&&(module.exports={activate,deactivate});
